<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

    <changeSet author="siarhei.piashko" id="changelog-001-uuid-ossp">
        <!--postgres sql highlight-->
        <sql>
            CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
        </sql>
    </changeSet>


    <changeSet author="siarhei.piashko" id="changelog-001-bank_account">
        <!--postgres sql highlight-->
        <sql>
            create table bank_account
            (
                id         UUID PRIMARY KEY DEFAULT uuid_generate_v4(),

                created_at TIMESTAMP NOT NULL,
                created_by UUID      NOT NULL,
                updated_at TIMESTAMP NOT NULL,
                updated_by UUID      NOT NULL,

                balance    NUMERIC   NOT NULL
            );
        </sql>
    </changeSet>

    <changeSet author="siarhei.piashko" id="changelog-001-operation">
        <!--postgres sql highlight-->
        <sql>
            create table operation
            (
                id               UUID PRIMARY KEY DEFAULT uuid_generate_v4(),

                created_at       TIMESTAMP NOT NULL,
                created_by       UUID      NOT NULL,
                updated_at       TIMESTAMP NOT NULL,
                updated_by       UUID      NOT NULL,

                fk_bank_account  UUID      NOT NULL REFERENCES bank_account (id),

                operation_source TEXT      NOT NULL,
                amount           NUMERIC   NOT NULL
            );
        </sql>
    </changeSet>

    <changeSet author="siarhei.piashko" id="changelog-001-is_withdrawal_cash_action-function">
        <!--postgres sql highlight-->
        <createProcedure>
            create or replace function is_receive_money_transfer_operation(UUID) returns boolean as
            $$
            select exists(
                           select 1
                           from "operation"
                           where id = $1
                             and operation_source = 'RECEIVE_MONEY_TRANSFER'
                       );
            $$ language sql;
        </createProcedure>
    </changeSet>


    <changeSet author="siarhei.piashko" id="changelog-001-money_transfer">
        <!--postgres sql highlight-->
        <sql>
            create table money_transfer
            (
                id                   UUID PRIMARY KEY DEFAULT uuid_generate_v4(),

                created_at           TIMESTAMP                      NOT NULL,
                created_by           UUID                           NOT NULL,
                updated_at           TIMESTAMP                      NOT NULL,
                updated_by           UUID                           NOT NULL,

                fk_send_operation    UUID REFERENCES operation (id) NOT NULL,
                fk_receive_operation UUID REFERENCES operation (id) NOT NULL,

                amount               NUMERIC                        NOT NULL
            );
        </sql>
    </changeSet>

    <changeSet author="siarhei.piashko" id="changelog-001-cash_action">
        <!--postgres sql highlight-->
        <sql>
            create table cash_action
            (
                id                      UUID PRIMARY KEY DEFAULT uuid_generate_v4(),

                created_at              TIMESTAMP NOT NULL,
                created_by              UUID      NOT NULL,
                updated_at              TIMESTAMP NOT NULL,
                updated_by              UUID      NOT NULL,

                action_type             TEXT      NOT NULL,
                cash_amount             NUMERIC   NOT NULL,

                fk_refill_operation     UUID REFERENCES operation (id)
                    CHECK ((NOT action_type = 'REFILL') OR (fk_refill_operation IS NOT NULL)),

                fk_withdrawal_operation UUID REFERENCES operation (id)
                    CHECK ((NOT action_type = 'WITHDRAWAL') OR (fk_withdrawal_operation IS NOT NULL)),
                included_fee            NUMERIC
                    CHECK ((NOT action_type = 'WITHDRAWAL') OR (included_fee IS NOT NULL))
            );
        </sql>
    </changeSet>

</databaseChangeLog>